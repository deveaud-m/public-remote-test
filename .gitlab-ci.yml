image: docker.siemens.com/code-ops/poetry-docker:1.1-py3.9

variables:
    http_proxy: $CODE_PROXY
    https_proxy: $CODE_PROXY
    no_proxy: code.siemens.com,docker.siemens.com
    POETRY_HTTP_BASIC_MKDOCS_USERNAME: gitlab-ci-token
    POETRY_HTTP_BASIC_MKDOCS_PASSWORD: $CI_JOB_TOKEN

stages:
    - fetch
    - build
    - deploy

# Fetch new commits from public repository
update:
    stage: fetch
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          allow_failure: true
    variables:
        PUBLIC_ORIGIN: "https://github.com/deveaud-m/public-remote-test.git"
    script:
        # Fetch branches from the remote public project
        - git remote add public $PUBLIC_ORIGIN
        - git fetch public
        - git branch -a
        - new_commit=$(git log origin/main..public/main | wc -l)
        - |
            if [ "${new_commit}" -gt 0 ]; then 
                echo "New commits where found on the remote master branch, build and deploy new website"
                git checkout -b public/main deploy
                git push -u origin deploy
            else
                echo "No new commits where found on the remote master branch, exit pipeline"
                exit 1
            fi

build_pages:
    stage: build
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
        - if: $CI_COMMIT_BRANCH == "deploy"
    script:
        - poetry install --no-root -n
        - poetry run mkdocs build -d docs/
    artifacts:
        paths:
        - docs/

pages:
  stage: deploy
  script:
    - mv docs/ public/
  artifacts:
    paths:
      - public/
